package com.cc.globenewslive.ApiClient;import com.cc.globenewslive.Model.City;import com.cc.globenewslive.Model.FavOrNot;import com.cc.globenewslive.Model.GetFav;import com.cc.globenewslive.Model.LoginUser;import com.cc.globenewslive.Model.NewsPost;import com.cc.globenewslive.Model.RegisterUser;import com.cc.globenewslive.Model.Search;import com.cc.globenewslive.Model.States;import java.util.List;import retrofit2.Call;import retrofit2.http.Field;import retrofit2.http.FormUrlEncoded;import retrofit2.http.GET;import retrofit2.http.Headers;import retrofit2.http.POST;import retrofit2.http.Path;import retrofit2.http.Query;public interface ApiClient {    @GET("posts/2")    Call<List<NewsPost>> getNews();    @GET("states")    Call<List<States>> getStates();    @GET("tags")    Call<List<City>>getCity();    @GET("post/")    Call<List<Search>> getResultts(            @Query("s") String Search    );    @GET("posts/")    Call<List<City>>getFilterCity(      @Query("category") String city    );    @GET("city_tags/")    Call<List<NewsPost>> getChannels(            @Query("tag_id") int cityId    );    @GET("tags/")    Call<List<NewsPost>> getFilterChannels(            @Query("tag_id") int cityId,            @Query("network") int networkId    );    @POST("register/")    @FormUrlEncoded    Call<RegisterUser> registerUser(            @Field("username") String username,            @Field("email") String email,            @Field("password") String password    );    @POST("login/")    @FormUrlEncoded    Call<LoginUser> loginUSer(            @Field("email") String email,            @Field("password") String password    );    @GET("fav_get/")    Call<List<GetFav>> getFavUser(            @Query("user_id") int userId    );    @POST("fav_check/")    Call<FavOrNot> favcheck(            @Query("user_id") int user_id,            @Query("posts_id") int posts_id    );    @POST("fav_insert/")    Call<FavOrNot> addfav(            @Query("user_id") int user_id,            @Query("user_email") String email,            @Query("posts_id") int posts_id    );    @POST("fav_delete/")    Call<FavOrNot> delfav(            @Query("user_id") int user_id,            @Query("posts_id") int posts_id    );}